<Application x:Class="MyKanban.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:MyKanban"
             xmlns:Views="clr-namespace:MyKanban.Views"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <!-- MahApps.Metro resource dictionaries. Make sure that all file names are Case Sensitive! -->
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />
                <!-- Accent and AppTheme setting -->
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Blue.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <Style x:Key="textBlockLinkStyle" TargetType="{x:Type TextBlock}">
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="TextDecorations" Value="Underline"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            
            <Style x:Key="buttonLinkStyle" TargetType="{x:Type Button}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <ContentPresenter Content="{TemplateBinding Content}"
                                              HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="TextBlock.Foreground" Value="Black"/>

                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="TextBlock.Foreground" Value="Gray"/>
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="TextBlock.Foreground" Value="White"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="cellFocusedStyle" TargetType="{x:Type FrameworkElement}">
                <Setter Property="Views:MouseFocus.IsCellFocused" Value="False"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Views:MouseFocus.IsCellFocused" Value="True"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="visibleWhenFocusedStyle" TargetType="{x:Type FrameworkElement}">
                <Setter Property="Visibility" Value="Hidden"/>
                <Style.Triggers>
                    <Trigger Property="Views:MouseFocus.IsCellFocused" Value="True">
                        <Setter Property="Visibility" Value="Visible"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

        
        </ResourceDictionary>
    </Application.Resources>
</Application>
